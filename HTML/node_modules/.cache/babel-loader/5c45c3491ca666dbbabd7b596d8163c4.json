{"remainingRequest":"/home/phoenix/Projects/HTML/node_modules/babel-loader/lib/index.js!/home/phoenix/Projects/HTML/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/phoenix/Projects/HTML/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/phoenix/Projects/HTML/src/components/Tabs/Tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/phoenix/Projects/HTML/src/components/Tabs/Tab.vue","mtime":1534455046000},{"path":"/home/phoenix/Projects/HTML/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/phoenix/Projects/HTML/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/phoenix/Projects/HTML/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/phoenix/Projects/HTML/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'tab-pane',\n  props: ['label', 'id'],\n  inject: ['addTab', 'removeTab'],\n\n  data() {\n    return {\n      active: false\n    };\n  },\n\n  mounted() {\n    this.addTab(this);\n  },\n\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n\n    this.removeTab(this);\n  }\n\n};",{"version":3,"sources":["Tab.vue"],"names":[],"mappings":";;;;;;;;;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAFA;AAGA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,WAAA,CAHA;;AAIA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AADA,KAAA;AAGA,GARA;;AASA,EAAA,OAAA,GAAA;AACA,SAAA,MAAA,CAAA,IAAA;AACA,GAXA;;AAYA,EAAA,SAAA,GAAA;AACA,QAAA,KAAA,GAAA,IAAA,KAAA,GAAA,CAAA,UAAA,EAAA;AACA,WAAA,GAAA,CAAA,UAAA,CAAA,WAAA,CAAA,KAAA,GAAA;AACA;;AACA,SAAA,SAAA,CAAA,IAAA;AACA;;AAjBA,CAAA","sourcesContent":["<template>\n  <div class=\"tab-pane\"\n       v-show=\"active\"\n       :id=\"id || label\"\n       :class=\"{active: active}\"\n       :aria-expanded=\"active\">\n    <slot></slot>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'tab-pane',\n    props: ['label', 'id'],\n    inject: ['addTab', 'removeTab'],\n    data(){\n      return {\n        active: false\n      }\n    },\n    mounted() {\n      this.addTab(this)\n    },\n    destroyed() {\n      if (this.$el && this.$el.parentNode) {\n        this.$el.parentNode.removeChild(this.$el)\n      }\n      this.removeTab(this)\n    }\n  }\n</script>\n<style>\n</style>\n"],"sourceRoot":"src/components/Tabs"}]}