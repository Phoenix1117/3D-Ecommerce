{"remainingRequest":"/home/phoenix/Projects/HTML/node_modules/babel-loader/lib/index.js!/home/phoenix/Projects/HTML/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/phoenix/Projects/HTML/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/phoenix/Projects/HTML/src/components/Navbar/NavLink.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/phoenix/Projects/HTML/src/components/Navbar/NavLink.vue","mtime":1534455046000},{"path":"/home/phoenix/Projects/HTML/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/phoenix/Projects/HTML/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/phoenix/Projects/HTML/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/phoenix/Projects/HTML/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'nav-link',\n  inject: ['close'],\n  props: {\n    to: {\n      type: [String, Object],\n      default: undefined\n    }\n  },\n  computed: {\n    componentType() {\n      return this.to ? 'router-link' : 'a';\n    }\n\n  },\n  methods: {\n    closeNav() {\n      if (this.close) {\n        this.close();\n      }\n    }\n\n  }\n};",{"version":3,"sources":["NavLink.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAHA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,aAAA,GAAA;AACA,aAAA,KAAA,EAAA,GAAA,aAAA,GAAA,GAAA;AACA;;AAHA,GATA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,GAAA;AACA,UAAA,KAAA,KAAA,EAAA;AACA,aAAA,KAAA;AACA;AACA;;AALA;AAdA,CAAA","sourcesContent":["<template>\n    <component :is=\"componentType\"\n               :to=\"to\"\n               class=\"dropdown-item\"\n               @click.native.stop=\"closeNav\">\n        <slot></slot>\n    </component>\n</template>\n<script>\n  export default {\n    name: 'nav-link',\n    inject: ['close'],\n    props: {\n      to: {\n        type: [String, Object],\n        default: undefined\n      }\n    },\n    computed: {\n      componentType(){\n        return this.to ? 'router-link' : 'a'\n      }\n    },\n    methods: {\n      closeNav() {\n        if (this.close) {\n          this.close();\n        }\n      }\n    },\n  }\n</script>\n<style>\n</style>"],"sourceRoot":"src/components/Navbar"}]}